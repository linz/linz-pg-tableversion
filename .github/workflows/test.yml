---
name: Test

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.1
      - name: Install python
        uses: actions/setup-python@v3
      - name: Run pre-commit hooks
        uses: pre-commit/action@v3.0.1

  test-install-from-source:
    name: Test PostgreSQL ${{ matrix.pg }} source install on Ubuntu ${{ matrix.release }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pg: ['12', '13', '14', '15', '16']
        release: [20.04, 22.04]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.5.2

      - name: Build Docker container
        run:
          docker build --build-arg=RELEASE=${{ matrix.release }} --build-arg="PG_VERSION=${{
          matrix.pg }}" --tag=tester .

      - name: Install from source
        run: docker run --rm tester ./test/ci/install-from-source.bash

  test-package-upgrade:
    name: Test PostgreSQL ${{ matrix.pg }} package upgrade on Ubuntu ${{ matrix.release }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pg: ['12', '13', '14', '15', '16']
        release: [20.04]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Build package
        uses: linz/linz-software-repository@v15
        with:
          release: ${{ matrix.release }}
          packages: jq

      - name: Build Docker container
        run: docker build --build-arg=RELEASE=${{ matrix.release }} --tag=tester .

      - name: Upgrade from latest release
        run:
          docker run --rm --volume="${PWD}/build-area:/packages" tester
          ./test/ci/package-upgrade.bash ${{ matrix.pg }}

      - name: Archive generated packages
        uses: actions/upload-artifact@v3.1.3
        with:
          name: PostgreSQL ${{ matrix.pg }} packages for Ubuntu ${{ matrix.release }}
          path: 'build-area/*.deb'
        if: failure()
